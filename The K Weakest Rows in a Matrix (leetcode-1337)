typedef pair<int,int>pi;

class Solution {

    int soldierCount(vector<int>&v){
        int low=0;int high=v.size()-1;

        while(low<=high){
            int mid=(low+high)/2;

            if(v[mid]==0)
            high=mid-1;
            else
            low=mid+1;
        }
        return low;
    }
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        vector<int>ans;
        priority_queue<pair<int,int>>pq;

        for(int i=0;i<mat.size();i++){
            pq.push({soldierCount(mat[i]),i});
            if(pq.size()>k){
                pq.pop();
            }
        }

        while(pq.size()){
            int x=pq.top().second;
            pq.pop();
            ans.push_back(x);
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
